[{"categories":null,"contents":"Questa è la pagina del tutorato di Sistemi Operativi del Corso di Laurea Triennale in Informatica (L-31) dell\u0026rsquo;Università degli Studi di Catania.\nInformazioni generali Per qualsiasi informazione sul corso riferirsi alla pagina ufficiale del Dipartimento di Matematica e Informatica e, per ulteriori chiarimenti, contattare il docente del corso.\nProgramma  Tutorial sulla Shell GNU/Linux L’uso delle chiamate di sistema Gestione dell’I/O su file e chiamate di servizio relative al file-system e alla mappatura dei file in memoria Gestione dei processi: creazione, coordinamento, esecuzione di comandi esterni Chiamate per la comunicazione tra processi tramite pipe e FIFO Chiamate per la comunicazione tra processi tramite messaggi Chiamate per la gestione della memoria condivisa tra i processi Chiamate per la gestione dei semafori  Risorse  Tutorial Shell Linux Repository GitHub  ","permalink":"https://herbrant.github.io/teaching/sistemioperativi/","tags":null,"title":"Sistemi Operativi (tutorato)"},{"categories":null,"contents":"Questa è la pagina del tutorato di Internet Security del Corso di Laurea Triennale in Informatica (L-31) dell\u0026rsquo;Università degli Studi di Catania.\nInformazioni generali Per qualsiasi informazione sul corso riferirsi alla pagina ufficiale del Dipartimento di Matematica e Informatica e, per ulteriori chiarimenti, contattare il docente del corso.\nProgramma  Proprietà di sicurezza Crittografia e Steganografia Sintassi dei protocolli, protocollo Otway-Rees Classificazione dei software nocivi Firewall, iptables, nftables, UncomplicatedFirewall, FirewallD Intrusion Detection System, Snort, Suricata OAuth 2.0  Risorse  Repository GitHub  ","permalink":"https://herbrant.github.io/teaching/internet_security/","tags":null,"title":"Internet Security (tutorato)"},{"categories":null,"contents":"Questa è la pagina del tutorato di Tecnologie per i Sistemi distribuiti e il Web con laboratorio del Corso di Laurea Triennale in Matematica (L-35) dell\u0026rsquo;Università degli Studi di Catania.\nInformazioni generali Per qualsiasi informazione sul corso riferirsi alla pagina ufficiale del Dipartimento di Matematica e Informatica e, per ulteriori chiarimenti, contattare il docente del corso.\nProgramma  Socket (C, Java) Thread (C, Java) Servlet Introduzione a Spring Boot PHP Laravel  Risorse Repository GitHub\n","permalink":"https://herbrant.github.io/teaching/tsdwl/","tags":null,"title":"TSDWL (tutorato)"},{"categories":null,"contents":"Questa è la pagina del tutorato di Informatica 2 del Corso di Laurea Triennale in Matematica (L-35) dell\u0026rsquo;Università degli Studi di Catania.\nInformazioni generali Per qualsiasi informazione sul corso riferirsi alla pagina ufficiale del Dipartimento di Matematica e Informatica e, per ulteriori chiarimenti, contattare il docente del corso.\nProgramma  Lettura/Scrittura file, Ricerca del minimo/massimo, Insertion Sort, Merge Sort Counting Sort, Sorting di coppie Media, Mediana, Selection Moltiplicazione tra matrici Matrix Chain Order (soluzione ricorsiva e programmazione dinamica) Longest Common Subsequence(soluzione ricorsiva e programmazione dinamica) Grafi, BFS, DFS, Test di aciclicità  Risorse Codici\n Lettura/Scrittura file Ricerca del minimo/massimo Insertion Sort Merge Sort Counting Sort Sorting di coppie Selection Moltiplicazione tra matrici Matrix Chain Order Longest Common Subsequence Algoritmi sui Grafi  ","permalink":"https://herbrant.github.io/teaching/informatica2/","tags":null,"title":"Informatica 2 (tutorato)"},{"categories":null,"contents":"Questa è la pagina del corso di Sistemi e Reti per l\u0026rsquo;Istituto Polivalente Valdisavoia di Catania.\nInformazioni Generali La disciplina Sistemi e Reti vuole fornire gli strumenti necessari alla progettazione e alla gestione di sistemi di elaborazione dati e reti di calcolatori.\nObiettivi Conoscenze\n Struttura, architettura e componenti del sistema di elaborazione Organizzazione del software di rete in livelli: modelli standard di riferimento Tipologie e tecnologie delle reti locali e geografiche Protocolli per la comunicazione in rete e analisi degli strati Dispositivi per la realizzazione di reti locali; apparati e sistemi per la connettività ad internet Dispositivi di instradamento e relativi protocolli; tecniche di gestione dell\u0026rsquo;indirizzamento di rete Problematiche di instradamento e sistemi di interconnessione nelle reti geografiche Normativa relativa alla sicurezza dei dati Tecnologie informatiche per garantire la sicurezza e l\u0026rsquo;integrità dei dati e dei sistemi Lessico e terminologia tecnica di settore anche in lingua inglese  Abilità\n Individuare la corretta configurazione di un sistema per una data applicazione Identificare i principali dispositivi periferici; selezionare un dispositivo adatto all\u0026rsquo;applicazione data Installare, configurare, e gestire sistemi operativi garantendone la sicurezza Classificare una rete e i servizi offerti con riferimento agli standard tecnologici Progettare, realizzare, configurare e gestire una rete locale con accesso a internet Installare e configurare software e dispositivi di rete Utilizzare il lessico e la terminologia tecnica di settore anche in lingua inglese  Programma  Struttura dell\u0026rsquo;elaboratore Il microprocessore Introduzione ai sistemi operativi Introduzione alla comunicazione Basi della comunicazione in rete Architettura TCP/IP Reti locali e metropolitane Livello applicativo Livello di trasporto Livello di rete Livello di collegamento Cenni di Crittografia e protocollo SSL/TLS Introduzione a GNU/Linux  Risorse Proiezioni\n Introduzione Struttura dell\u0026rsquo;elaboratore  Libro di testo\nInternetworking, Elena Baldino, Renato Rondano, Antonio Spano Juvenilia Scuola, 2016\n","permalink":"https://herbrant.github.io/teaching/sistemiereti/","tags":null,"title":"Sistemi e Reti"},{"categories":null,"contents":"This talk looked at Liberty Mutual’s transformation to Continuous Integration, Continuous Delivery, and DevOps. For a large, heavily regulated industry, this task can not only be daunting, but viewed by many as impossible. Often, organizations try to reduce the friction through micro-fixes, but Eddie’s team asked how to change the culture to reduce the friction and concluded with the following final points:\n Don’t mandate DevOps. Give employees the chance to master their discipline with examples to set and follow. Favor deep end-to-end accomplishments over broad but incremental steps forward. Focus on taking the right teams far before encouraging broad adoption. Centralize the platforms and tools that your teams shouldn’t be thinking about. Provide foundational services/commodities and let teams stay on purpose. Incorporate contributions from everyone; don’t stifle autonomy. Stay open to new ways of working. Challenge security policies, but respect intentions. Find new ways to enforce concerns without abandoning precaution.    ","permalink":"https://herbrant.github.io/publications/alldaydevops/","tags":["DevOps","Continuous Integration","Continuous Delivery","CI/CD pipelines","agile","Culture"],"title":"Organically DevOps: Building Quality and Security into the Software Supply Chain at Liberty Mutual"},{"categories":null,"contents":"Intro Doesn\u0026rsquo;t matter whether it\u0026rsquo;s a CakePHP app for a client, your own personal CMS, or any other web based application. If your passing around passwords or other sensitive info you should really implement SSL. SSL provides 2 main perks to your visitors.\n First it encrypts all communication that flies across the web. This prevents curious or devious billies from getting your secrets. Secondly it ensures to the user that your server is in fact who it claims, and not a nasty \u0026lsquo;man in the middle\u0026quot; attack. Finally it gives your site that touch of class\u0026hellip;. which of course a classy person like yourself relies on.  Once you implement SSL certificates on your server you\u0026rsquo;ll want to require secure connections using Apache\u0026rsquo;s rewrite module. Now I won\u0026rsquo;t dwell on the creation and signing of certificates, its already well documented. If your just starting out though,heres a few links I recommend;\n Creating self-signed certificates (free, but should only be used internally or for testing, users will; see an \u0026lsquo;Untrusted\u0026quot; warning) Requesting a CA Signed certificate (not free, but the final certificate is trusted and seamless for users)  The second link uses the schools internal CA, you will need to pay a public CA like Entrust or Verisign. All of this information is aimed at \u0026lsquo;nix or solaris servers running apache. Why? cause a production windows server is laughable :-p\nNow that you have a certificate, whats next? So there you are you have a shiny new Certificate and Server key, how do you force visitors to your apache driven site to use the SSL? You copied the certificates into the appropite locations right? And you have made the needed changes in httpd.conf right? So now when you view https://example.com you see a \u0026lsquo;trusted\u0026rsquo; warning or your site right? If No to any of these than this article does a pretty good job of outlining those steps.\nThe SSL Works, How do I force connections to use it? First you need to decide if you want to force every page on your site to use SSL, or only a particular sub-domain, or maybe just your admin directory. Since the overhead is minimal there is no harm is forcing the entire domain to leverage SSL, but if it is a self-signed certificate for your personal use than you\u0026rsquo;ll most certainly want to restrict its use to your own areas. This prevents users from seeing that nasty warning \u0026ldquo;This server is not trusted\u0026rdquo; You\u0026rsquo;ll know if your using SSL because the url prefix changes from http to https (s for secure).\nForcing entire domain to use SSL You want any visit, any where to use ssl. This probably the simplest solution. Create or append to your htaccess file in the top directory of your server. Some people use a port check (80 is typically http, while 443 is https) but if you have alernate configs or the user just adds :8080 to the end of the url this method is useless. Instead check whether the https environmental variable is set, if not then redirect.\nRewriteCond %{HTTPS} !=on RewriteRule ^(.*)$ https://%{SERVER_NAME}$1 \\[R,L\\] Forcing sub-domains to use SSL Maybe you only want mysecretarea.example.com to use SSL, that\u0026rsquo;s easy enough. Its the same premise as above, but you move the htaccess file into the directory that corresponds to the subdomain. Also change the second line like below;\nRewriteCond %{HTTPS} !=on RewriteRule ^(.*)$ https://mysecretarea.%{SERVER_NAME}$1 \\[R,L\\] Forcing a directory to use SSL This method cn get a little hairier if your using aliases or redirects on top of this one. You\u0026rsquo;ll need to consider what order the commands are read. The basic principle is like so. You want all visits to example.com/admin to use ssl. Create a htaccess file in the parent directory. Again will check for the https variable, but this time we also check for the sub-directory to be in the path.\nRewriteCond %{HTTPS} !=on RewriteRule ^/admin/(.*)$ https://%{SERVER_NAME}/admin/$1 \\[R,L\\] ","permalink":"https://herbrant.github.io/blog/force-ssl/","tags":["apache","apache","redirect","rewrite","ssl","web development"],"title":"Forcing Visits to use SSL"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml\n[outputs] home = [\u0026#34;HTML\u0026#34;, \u0026#34;JSON\u0026#34;] Searching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category\n... \u0026#34;contents\u0026#34;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026#34;tags\u0026#34;:{{ .Params.tags | jsonify }}{{end}}, \u0026#34;categories\u0026#34; : {{ .Params.categories | jsonify }}, ... Edit fuse.js options to Search static/js/search.js\nkeys: [ \u0026#34;title\u0026#34;, \u0026#34;contents\u0026#34;, \u0026#34;tags\u0026#34;, \u0026#34;categories\u0026#34; ] ","permalink":"https://herbrant.github.io/search/","tags":null,"title":"Search Results"}]